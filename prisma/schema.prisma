// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Users and Authentication
model User {
  id            String         @id @default(cuid())
  email         String         @unique
  name          String?
  passwordHash  String
  role          String         @default("USER")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  // Added relations
  blogPosts     BlogPost[]     // Relation to BlogPost
  quizResponses QuizResponse[] // Relation to QuizResponse
}

// Services
model Service {
  id          String       @id @default(cuid())
  title       String
  slug        String       @unique
  description String?      @db.Text
  category    String?
  content     String?      @db.Text
  isActive    Boolean      @default(true)
  caseStudies CaseStudy[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

// Blog Posts
model BlogPost {
  id            String    @id @default(cuid())
  title         String
  slug          String    @unique
  content       String?   @db.Text
  excerpt       String?   @db.Text
  author        User      @relation(fields: [authorId], references: [id])
  authorId      String
  featuredImage String?
  status        String    @default("draft")
  industry      String?
  readTime      Int?
  views         Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Quiz System
model QuizQuestion {
  id          String       @id @default(cuid())
  question    String       @db.Text
  orderNumber Int
  isActive    Boolean      @default(true)
  options     QuizOption[]
  createdAt   DateTime     @default(now())
}

model QuizOption {
  id          String       @id @default(cuid())
  question    QuizQuestion @relation(fields: [questionId], references: [id])
  questionId  String
  optionText  String       @db.Text
  points      Json?
  createdAt   DateTime     @default(now())
}

model QuizResponse {
  id                   String    @id @default(cuid())
  user                 User      @relation(fields: [userId], references: [id])
  userId               String
  responses            Json
  recommendedServiceId String?
  createdAt            DateTime  @default(now())
}

// Contact and Leads
model ContactSubmission {
  id              String    @id @default(cuid())
  name            String?
  email           String
  company         String?
  message         String?   @db.Text
  serviceInterest String?
  status          String    @default("new")
  createdAt       DateTime  @default(now())
}

// Case Studies
model CaseStudy {
  id            String    @id @default(cuid())
  title         String
  slug          String    @unique
  clientName    String?
  industry      String?
  challenge     String?   @db.Text
  solution      String?   @db.Text
  results       String?   @db.Text
  featuredImage String?
  service       Service   @relation(fields: [serviceId], references: [id])
  serviceId     String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

// Team Members
model TeamMember {
  id          String    @id @default(cuid())
  name        String
  position    String?
  bio         String?   @db.Text
  image       String?
  linkedinUrl String?
  email       String?
  orderNumber Int?
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}